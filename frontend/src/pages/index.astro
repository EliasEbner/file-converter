---
import "../styles/global.css";
import Layout from "../layouts/Layout.astro";
import RightArrow from "../components/RightArrow.astro";
import Button from "../components/Button.astro";
import Select from "../components/Select.astro";
import Option from "../components/Option.astro";

const something = ["mp3", "mp4", "jpg", "png", "webp", "webm", "wav", "gif", "mkv", "mov", "avi", "wmv", "aac", "opus", "wma", "bmp", "tiff"];
---

<Layout>
  <section class="w-full h-full flex justify-center items-center">
    <div class="flex flex-col md:flex-row gap-8 sm:gap-10 md:gap-6 lg:gap-8 xl:gap-12 2xl:gap-16 items-center">
      <!-- FILE UPLOAD -->
      <div class="flex flex-col items-center gap-4 pt-14">
      <!-- UPLOAD AREA -->
      <div id="drop_area" class="hover:scale-110 aspect-video w-52 sm:w-68 px-8 md:w-50 lg:w-70 xl:w-90 lg:px-10 cursor-pointer duration-500 ease-out border-dashed border-2 border-primary rounded-4xl bg-primary-transparent flex justify-center items-center">
        <p class="text-primary text-center">
          Drag and drop a file or click to upload
        </p>
        <input type="file" class="hidden" id="file_input" multiple=false />
      </div>

      <p id="file_name" class="hidden w-90 text-center">
      </p>
      <!-- SUBMIT BUTTON -->
      <Button>Submit</Button>
      </div>

      <ion-icon name="chevron-forward-outline" class="text-5xl hidden md:block" />
      <ion-icon name="chevron-down-outline" class="text-5xl md:hidden" />

      <!-- TARGET FILETYPE -->
      <Select label="Target filetype:">
        {something.map((elem) => 
          <Option value={elem}>{elem}</Option>
        )}
      </Select>

      <ion-icon name="chevron-forward-outline" class="text-5xl hidden md:block" />
      <ion-icon name="chevron-down-outline" class="text-5xl md:hidden" />

      <!-- CONVERTED FILE -->
      <div class="aspect-video w-52 sm:w-68 px-8 md:w-50 lg:w-70 xl:w-90 lg:px-10 flex justify-center items-center hover:scale-110 cursor-pointer duration-500 ease-out border-dashed border-2 border-primary rounded-4xl bg-primary-transparent">
        <ion-icon name="download-outline" class="text-6xl pb-2 sm:text-7xl md:text-6xl md:pb-3 lg:text-7xl lg:pb-4 xl:text-8xl xl:bg-6 text-font-secondary" />
      </div>
    </div>
  </section>
</Layout>

<style>
  .hidden {
    display: hidden;
  }
</style>

<script>
  const dropArea = document.getElementById("drop_area");
  const fileNameParagraph = document.getElementById("file_name");
  const fileInput: HTMLInputElement | null = document.getElementById("file_input") as HTMLInputElement | null;

  if(dropArea) {
    dropArea.ondragover = dropArea.ondragenter = function(event) {
      event.preventDefault();
    }
  }

  function onFileUpload(file: File | null) {
    if (dropArea && fileNameParagraph && fileInput && file){
      dropArea.classList.toggle("hidden");
      fileNameParagraph.classList.toggle("hidden");
      fileNameParagraph.innerText = file.name;
    }
  }

  function dropAreaDropHandler(event: DragEvent) {
    event.preventDefault();
    console.log("something happened")

    if (event.dataTransfer?.items && event.dataTransfer.items.length !== 0) {
      const file = event.dataTransfer.items[0].getAsFile();
      onFileUpload(file);

      // this is weird but it doesn't work othewise trust me bro
      if (file && fileInput) {
        const dataTransfer = new DataTransfer();
        dataTransfer.items.add(file);
        fileInput.files = dataTransfer.files;
      }
    }
  }

  function dropAreaClickHandler(_event: MouseEvent) {
    fileInput?.dispatchEvent(new MouseEvent("click"));
  }

  function fileInputChangeHandler(_event: Event) {
    console.log(fileInput?.files?.[0])
    onFileUpload(fileInput?.files?.[0] ?? null);
  }

  dropArea?.addEventListener("drop", dropAreaDropHandler);
  dropArea?.addEventListener("click", dropAreaClickHandler);
  fileInput?.addEventListener("change", fileInputChangeHandler);
</script>
